 # Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-18.04
stages:
- stage: Build
  displayName: Build ET Phone Home Maven
  jobs:  
  - job: DockerImage
    displayName: ET Phone Kepler
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'my-app/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'etphonehome'
        publishLocation: 'Container'
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'ET-Phone-Kepler'
        publishLocation: 'pipeline'
    
    # - task: DockerCompose@0
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Alien Connection(f7b30d19-417e-4aa7-bba6-607cf2e2cd41)'
    #     azureContainerRegistry: '{"loginServer":"et0phone0home0registy.azurecr.io", "id" : "/subscriptions/f7b30d19-417e-4aa7-bba6-607cf2e2cd41/resourceGroups/et0phone0home0rg/providers/Microsoft.ContainerRegistry/registries/et0phone0home0registy"}'
    #     action: 'Run a Docker Compose command'
    #     dockerComposeFile: '**/docker-compose.yml'
    #    customCommand: 'image save <imageName>:$(Build.BuildId) -o $(Build.ArtifactStagingDirectory)/imagetest.tar'

    - download: current
      artifact: 'ET-Phone-Kepler'

    # - task: Docker@0
    #   displayName: 'Run a Docker command'
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Alien Connection(f7b30d19-417e-4aa7-bba6-607cf2e2cd41)'
    #     azureContainerRegistry: '{"loginServer":"et0phone0home0registy.azurecr.io", "id" : "/subscriptions/f7b30d19-417e-4aa7-bba6-607cf2e2cd41/resourceGroups/et0phone0home0rg/providers/Microsoft.ContainerRegistry/registries/et0phone0home0registy"}'
    #     action: 'Run a Docker command'
    #     customCommand: 'load --input $(Pipeline.Workspace)/docker-images/imagetest.tar'
    
    # - task: Docker@1
    #   displayName: 'Build the Docker image'
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Alien Connection(f7b30d19-417e-4aa7-bba6-607cf2e2cd41)'
    #     azureContainerRegistry: '{"loginServer":"et0phone0home0registy.azurecr.io", "id" : "/subscriptions/f7b30d19-417e-4aa7-bba6-607cf2e2cd41/resourceGroups/et0phone0home0rg/providers/Microsoft.ContainerRegistry/registries/et0phone0home0registy"}'
    #     command: 'Build an image'
    #     dockerFile: '**/Dockerfile'
    #     imageName: '$(ImageName)'
    #     includeLatestTag: true
    #     useDefaultContext: false
    #     buildContext: '.'

